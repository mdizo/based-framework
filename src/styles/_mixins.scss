@mixin mapColor($name, $color, $steps: null) {
  @if $steps {
    @for $step from 1 through $steps {
      --#{$name}-#{$step}: var(--#{$color}-#{$step});
    }
  } @else {
    --#{$name}-#{$step}: var(--#{$color}-#{$step});
  }
}

/* control mixins */

/* removes default appearance from buttons and inputs */
@mixin is-controlled {
  box-shadow: none;
  outline: none;
  -moz-appearance: none;
  -webkit-appearance: none;
}

/* makes element unselectable by user */
@mixin is-unselectable {
  user-select: none;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
}

.is-unselectable {
  @include is-unselectable;
}

/* enables momentum-based scrolling on touch devices when content overflows */
@mixin overflow-touch {
  -webkit-overflow-scrolling: touch;
}

.overflow-touch {
  @include overflow-touch;
}

/* makes an element resizable */
@mixin is-resizable($direction) {
  overflow: auto;
  resize: $direction;
}

/*
stretches element to full size of its parent
parent must have `position: relative`
*/
@mixin is-stretched {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.is-stretched {
  @include is-stretched;
}

/* visually hides elements but keeps them accessible to screen readers */
@mixin is-visually-hidden {
  clip: rect(0 0 0 0);
  position: absolute;
  width: 1px;
  height: 1px;
  overflow: hidden;
  margin: -1px;
  padding: 0;
  border: 0;
  white-space: nowrap;
}

.is-visually-hidden {
  @include is-visually-hidden;
}

/* truncate text and show ellipsis */
@mixin has-text-truncated {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.has-text-truncated {
  @include has-text-truncated;
}

/* overflow content hidden */
@mixin is-clipped {
  overflow: hidden !important;
}

.is-clipped {
  @include is-clipped;
}

/* reset of all properties to initial values */
@mixin is-initial {
  all: initial;
}

/* reset of all properties to inheritable values, or else initial values */
@mixin is-unset {
  all: unset;
}